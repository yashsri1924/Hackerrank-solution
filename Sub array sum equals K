#include <vector>
#include <unordered_map>

class Solution {
public:
    int subarraySum(std::vector<int>& nums, int k) {

        std::unordered_map<int, int> prefixSumCount;
        
        prefixSumCount[0] = 1;
        
        int currentSum = 0;
        int totalCount = 0;
        
        for (int i = 0; i < nums.size(); ++i) {
            currentSum += nums[i];

            if (prefixSumCount.count(currentSum - k)) {
                totalCount += prefixSumCount[currentSum - k];
            }
            prefixSumCount[currentSum]++;
        }
        
        return totalCount;
    }
};
